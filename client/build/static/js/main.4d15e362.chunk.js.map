{"version":3,"sources":["logo.svg","views/Dashboard.js","views/NewPet.js","components/DeleteButton.js","views/ViewPet.js","views/EditPet.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","allPets","setAllPets","useEffect","axios","get","then","response","data","results","catch","err","console","log","to","className","map","pet","idx","petName","petType","_id","NewPet","petDesc","petSkill1","petSkill2","petSkill3","setPet","errors","setErrors","changeHandler","e","target","name","value","onSubmit","preventDefault","post","message","navigate","htmlFor","type","onChange","DeleteButton","props","id","onClick","delete","ViewPet","EditPet","patch","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d15e362.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {Link} from '@reach/router';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\n\nconst Dashboard = () => {\n    const [allPets, setAllPets] = useState([]);\n    const [petErrors, setPetErrors] = useState({})\n\n    useEffect(()=>{\n        axios.get('http://localhost:8000/api/pets')\n            .then(response => setAllPets(response.data.results))\n            .catch(err => console.log('Something went wrong', err))\n    }, []); \n    \n    const deleteHandler = (id =>{\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\n    })\n\n    return (\n        <>\n            <h2>These pets are looking for a good home</h2>\n            <Link to='pets/new'>add a pet to the shelter</Link>\n            <div className=\"col-sm-12\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            allPets.map((pet, idx)=>\n                                <tr key={idx}>\n                                    <td>{pet.petName}</td>\n                                    <td>{pet.petType}</td>\n                                    <td><Link to={`/pets/${pet._id}`}>Details</Link> |&nbsp;\n                                        <Link to={`/pets/${pet._id}/edit`}>Edit</Link></td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard\n","import React, {useState, useEffect} from 'react'\nimport {Link, navigate} from '@reach/router';\nimport axios from 'axios';\n\nconst NewPet = () => {\n    const [pet, setPet] = useState({\n        petName: \"\",\n        petType: \"\",\n        petDesc: \"\",\n        petSkill1: \"\",\n        petSkill2: \"\",\n        petSkill3: \"\",\n    });\n    const  [errors, setErrors] = useState({\n        petName: null,\n        petType: null,\n        petDesc: null\n    });\n\n    const changeHandler = e => {\n    \n        setPet({\n            ...pet,\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    const submitHandler = e => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/pets', pet)\n            .then(response => {\n                if(response.data.message === 'error'){\n                    setErrors(response.data.errors);\n                }\n                else {\n                    navigate('/');\n                }\n            })\n    }\n    return (\n        <>\n        <h3>Know a pet needing a home?</h3>\n        <Link to='/'>back to home</Link>\n        <div>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group row\">\n                    {\n                        errors.petName ?\n                        <span className=\"col-sm-12\">{errors.petName.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petName\" className='col-sm-4'>Pet Name: </label>\n                    <input type=\"text\" name=\"petName\" onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.petType ?\n                        <span className=\"col-sm-12\">{errors.petType.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petType\" className='col-sm-4'>Pet Type: </label>\n                    <input type=\"text\" name='petType' onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.petDesc ?\n                        <span className=\"col-sm-12\">{errors.petDesc.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petDesc\" className='col-sm-4'>Pet Description: </label>\n                    <input type=\"text\" name='petDesc' onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <h4>Skills (optional):</h4>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill1\" className='col-sm-4'>Skill 1: </label>\n                    <input type=\"text\" name='petSkill1' onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill2\" className='col-sm-4'>Skill 2: </label>\n                    <input type=\"text\" name='petSkill2' onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill3\" className='col-sm-4'>Skill 3: </label>\n                    <input type=\"text\" name='petSkill3' onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <input type='submit' value='Add Pet' className='btn btn-primary'/>\n            </form>\n        </div>\n        </>\n    )\n}\n\nexport default NewPet\n","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { navigate } from '@reach/router';\n\nconst DeleteButton = props => {\n    const { id, pet } = props;\n    \n    const deletePet = () => {\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\n            .then(response => navigate('/'))\n            .catch(err => navigate('/'))\n    }\n    return (\n        <div>\n            <button type=\"button\" className=\"btn btn-danger col-sm-3\" onClick = {deletePet}>Adopt {pet.petName} </button>\n        </div>\n    )\n}\n\nexport default DeleteButton\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport DeleteButton from '../components/DeleteButton';\nimport {Link} from '@reach/router';\n\nconst ViewPet = props => {\n    const { id } = props;\n    const [pet, setPet ] = useState({})\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(response => setPet(response.data.results))\n            .catch(err => console.log(err));\n    }, [])\n    return (\n        <div>\n            <h3>Details about: {pet.petName}</h3>\n            <Link to='/'>back to home</Link>\n            <DeleteButton\n                id = { pet._id }\n                pet={ pet } \n            />\n            <div>\n                <p>Pet Type: {pet.petType}</p>\n                <p>Pet Description: {pet.petDesc}</p>\n                <p>Skills: </p>\n                {\n                    pet.petSkill1 ?\n                    pet.petSkill1\n                    :''\n                }\n                {\n                    pet.petSkill2 ?\n                    <p>{pet.petSkill2}</p>\n                    :''\n                }\n                {\n                    pet.petSkill3 ?\n                    <p>{pet.petSkill3}</p>\n                    :''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPet\n","import React from 'react'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, navigate} from '@reach/router';\n\nconst EditPet = props => {\n    const { id } = props;\n   \n    const [pet, setPet] = useState({\n        petName: \"\",\n        petType: \"\",\n        petDesc: \"\",\n        petSkill1: \"\",\n        petSkill2: \"\",\n        petSkill3: \"\",\n    });\n\n    const  [errors, setErrors] = useState({\n        petName: null,\n        petType: null,\n        petDesc: null\n    });\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(response => setPet(response.data.results))\n            .catch(err => console.log(err))\n    },[])\n\n    const changeHandler = e => {\n        setPet({\n            ...pet,\n            [e.target.name]: e.target.value\n        });\n    }\n    \n    const submitHandler = e => {\n        e.preventDefault();\n        axios.patch(`http://localhost:8000/api/pets/${id}`, pet)\n            .then(response => {\n                if(response.data.message === 'success'){\n                    navigate(`/pets/${id}`);\n                }\n                else {\n                    setErrors(response.data.errors);\n                }\n            })\n    }\n\n    return (\n        <>\n        <h2> Edit: {pet.petName}</h2>\n        <Link to='/'>back to home</Link>\n        <div>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group row\">\n                    {\n                        errors.petName ?\n                        <span className=\"col-sm-12\">{errors.petName.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petName\" className='col-sm-4'>Pet Name: </label>\n                    <input type=\"text\" name=\"petName\"  onChange={e => changeHandler(e)} className='col-sm-8 form-control' value={pet.petName}/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.petType ?\n                        <span className=\"col-sm-12\">{errors.petType.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petType\" className='col-sm-4'>Pet Type: </label>\n                    <input type=\"text\" name='petType' value={pet.petType} onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.petDesc ?\n                        <span className=\"col-sm-12\">{errors.petDesc.message}</span>\n                        : ''\n                    }\n                    <label htmlFor=\"petDesc\" className='col-sm-4'>Pet Description: </label>\n                    <input type=\"text\" name='petDesc'value={pet.petDesc} onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill1\" className='col-sm-4'>Skill 1: </label>\n                    <input type=\"text\" name='petSkill1' value={pet.petSkill1} onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill2\" className='col-sm-4'>Skill 2: </label>\n                    <input type=\"text\" name='petSkill2' value={pet.petSkill2} onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"petSkill3\" className='col-sm-4'>Skill 3: </label>\n                    <input type=\"text\" name='petSkill3' value={pet.petSkill3} onChange={e => changeHandler(e)} className='col-sm-8 form-control'/>\n                </div>\n                <input type='submit' value='Edit Pet' className='btn btn-primary'/>\n            </form>\n        </div>\n        </>\n    )\n}\n\nexport default EditPet\n","import logo from './logo.svg';\nimport './App.css';\nimport {Router, Link} from '@reach/router';\nimport Dashboard from './views/Dashboard';\nimport NewPet from './views/NewPet';\nimport ViewPet from './views/ViewPet';\nimport EditPet from './views/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Pet Shelter</h1>\n      </header>\n      <Router>\n        <Dashboard path='/'/>\n        <NewPet path ='/pets/new'/>\n        <ViewPet path = '/pets/:id'/>\n        <EditPet path='/pets/:id/edit'/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}